import random
import time
import copy
import numpy as np

import nearestNeighbour
from readData import ReadData

start_time = time.time()


def run(size, dis_mat, k=0):
    """
    :parameter size - size of matrix
    :parameter dis_mat - matrix

    path_index - temporary path
    best_path - the best path from NN algorithm
    starting_numbers - list of a 10 random starting points

    path - the best available path which can be generated by NN algorithm for k-chances(10)
    :return: path
    """
    starting_numbers = []
    best_distance = 9999999999
    # print(dis_mat)
    if k != 0:

        for _ in range(0, k):
            x = random.randint(0, size - 1)
            if x not in starting_numbers:
                starting_numbers.append(x)

    else:
        for i in range(0,size ):
            starting_numbers.append(i)

    for start in starting_numbers:
        dis_matrix = copy.deepcopy(dis_mat)

        path, distance = nearestNeighbour.run(size,dis_matrix,start)

        if distance < best_distance:
            best_distance = distance
            best_path = path



    return best_path
